1. C语言中常用的文件操作函数总结

(1) fopen

作用：打开文件。

表头文件：#include <stdio.h>

定义函数：FILE *fopen(const char *path, const char *mode);

函数说明：参数path字符串包含欲打开的文件路径及文件名，参数mode字符串则代表着流形态。

mode有下列几种形态字符串：

r：打开只读文件，该文件必须存在。

r+：打开可读写的文件，该文件必须存在。

w：打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。

w+：打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。

a：以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，即文件原先的内容会被保留。

a+：以附加方式打开可读写的文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾后，即文件原先的内容会被保留。

上述的形态字符串都可以再加一个b字符，如rb、w+b或ab＋等组合，加入b字符用来告诉函数库打开的文件为二进制文件，而非纯文字文件。不过在POSIX系统，包含Linux都会忽略该字符。由fopen()所建立的新文件会具有S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH(0666)权限，此文件权限也会参考umask值。

返回值：文件顺利打开后，指向该流的文件指针就会被返回。如果文件打开失败，则返回NULL，并把错误代码存在errno中。

附加说明：一般而言，打开文件后会作一些文件读取或写入的动作，若打开文件失败，接下来的读写动作也无法顺利进行，所以在fopen()后请作错误判断及处理。

 

(2) fclose

作用：关闭文件

表头文件：#include <stdio.h>

定义函数：int fclose(FILE *stream);

函数说明：fclose()用来关闭先前fopen()打开的文件。此动作会让缓冲区内的数据写入文件中，并释放系统所提供的文件资源。

返回值：若关闭文件动作成功则返回0，有错误发生时则返回EOF并把错误代码存到errno中。

错误代码：EBADF表示参数stream非已打开的文件。

 

(3) fgetc

作用：由文件中读取一个字符。

表头文件：include <stdio.h>

定义函数：int fgetc(FILE *stream);

函数说明：fgetc()从参数stream所指的文件中读取一个字符。若读到文件尾而无数据时便返回EOF。

返回值：getc()会返回读取到的字符，若返回EOF则表示到了文件尾。

 

(4) fgets

作用：由文件中读取一字符串。

表头文件：include<stdio.h>

定义函数：char *fgets(char *s, int size, FILE *stream);

函数说明：fgets()用来从参数stream所指的文件内读入字符并存到参数s所指的内存空间，直到出现换行字符、读到文件尾或是已读了size-1个字符为止，最后会加上NULL作为字符串结束。

返回值：fgets()若成功则返回s指针，返回NULL则表示有错误发生。

 

(5) fflush

作用：更新缓冲区。

表头文件：#include <stdio.h>

定义函数：int fflush(FILE *stream);

函数说明：fflush()会强迫将缓冲区内的数据写回参数stream指定的文件中。如果参数stream为NULL，fflush()会将所有打开的文件数据更新。

返回值：成功返回0，失败返回EOF，错误代码存于errno中。

错误代码：EBADF参数stream指定的文件未被打开，或打开状态为只读。

 

(6) fputc

作用：将一指定字符写入文件流中。

表头文件：#include <stdio.h>

定义函数：int fputc(int c, FILE *stream);

函数说明：fputc会将参数c转为unsigned char后写入参数stream指定的文件中。

返回值：fputc()会返回写入成功的字符，即参数c。若返回EOF，则代表写入失败。

 

(7) fputs

作用：将一指定的字符串写入文件内。

表头文件：#include <stdio.h>

定义函数：int fputs(const char *s, FILE *stream);

函数说明：fputs()用来将参数s所指的字符串写入到参数stream所指的文件内。

返回值：若成功，则返回写入的字符个数，返回EOF则表示有错误发生。

 

(8) fread

作用：从文件流读取数据。

表头文件：#include <stdio.h>

定义函数：size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream);

函数说明：fread()用来从文件流中读取数据。参数stream为已打开的文件指针，参数ptr指向欲存放读取进来的数据空间，读取的字符数以参数size*nmemb来决定。fread()会返回实际读取到的nmemb数目，如果此值比参数nmemb来得小，则代表可能读到了文件尾或有错误发生，这时必须用feof()或ferror()来决定发生了什么情况。

返回值：返回实际读取到的nmemb数目。

 

(9) fseek

作用：移动文件流的读写位置。

表头文件：#include <stdio.h>

定义函数：int fseek(FILE *stream, long offset, int whence);

函数说明：fseek()用来移动文件流的读写位置。参数stream为已打开的文件指针，参数offset为根据参数whence来移动读写位置的位移数。

参数whence为下列其中一种：

SEEK_SET：从距文件开头offset位移量为新的读写位置，SEEK_CUR以目前的读写位置往后增加offset个位移量，SEEK_END将读写位置指向文件尾后再增加offset个位移量。

当whence值为SEEK_CUR 或SEEK_END时，参数offset允许负值的出现。

下列是较特别的使用方式：

1) 欲将读写位置移动到文件头时：fseek(FILE *stream, 0, SEEK_SET);

2) 欲将读写位置移动到文件尾时：fseek(FILE *stream, 0, SEEK_END);

返回值：当调用成功时，则返回0，若有错误，则返回-1，errno会存放错误代码。

附加说明：fseek()不像lseek()会返回读写位置，因此必须使用ftell()来取得目前读写的位置。

 

(10) ftell

作用：取得文件流的读取位置。

表头文件：#include <stdio.h>

定义函数：long ftell(FILE * stream);

函数说明：ftell()用来取得文件流目前的读写位置，参数stream为已打开的文件指针。

返回值：当调用成功时则返回目前的读写位置，若有错误则返回-1，errno会存放错误代码。

错误代码：EBADF 参数stream无效或可移动读写位置的文件流。

 

(11) fwrite

作用：将数据写至文件流。

表头文件：#include <stdio.h>

定义函数：size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream);

函数说明：fwrite()用来将数据写入文件流中。参数stream为已打开的文件指针，参数ptr指向欲写入的数据地址，总共写入的字符数以参数size*nmemb来决定。fwrite()会返回实际写入的nmemb数目。

返回值：返回实际写入的nmemb数目。

 

(12) getc

作用：由文件中读取一个字符。

表头文件：#include <stdio.h>

定义函数：int getc(FILE *stream);

函数说明：getc()用来从参数stream所指的文件中读取一个字符。若读到文件尾而无数据时，便返回EOF。虽然getc()与fgetc()作用相同，但getc()为宏定义，非真正的函数调用。

返回值：getc()会返回读取到的字符，若返回EOF则表示到了文件尾。

 

(13) getchar

作用：由标准输入设备内读进一字符。

表头文件：#include <stdio.h>

定义函数：int getchar(void);

函数说明：getchar()用来从标准输入设备中读取一个字符，然后将该字符从unsigned char转换成int后返回。

返回值：getchar()会返回读取到的字符，若返回EOF则表示有错误发生。

附加说明：getchar()非真正函数，而是getc(stdin)宏定义。

 

(14) gets

作用：由标准输入设备内读进一字符串。

表头文件：#include <stdio.h>

定义函数：char *gets(char *s);

函数说明：gets()用来从标准设备读入字符并存到参数s所指的内存空间，直到出现换行字符或读到文件尾为止，最后加上NULL作为字符串结束。

返回值：gets()若成功则返回s指针，返回NULL则表示有错误发生。

附加说明：由于gets()无法知道字符串s的大小，必须遇到换行字符或文件尾才会结束输入，因此容易造成缓冲溢出的安全性问题。建议使用fgets()取代。

 

(15) putc

作用：将一指定字符写入文件中。

表头文件：#include <stdio.h>

定义函数：int putc(int c, FILE *stream);

函数说明：putc()会将参数c转为unsigned char后写入参数stream指定的文件中。虽然putc()与fputc()作用相同，但putc()为宏定义，非真正的函数调用。

返回值：putc()会返回写入成功的字符，即参数c。若返回EOF则代表写入失败。

 

(16) putchar

作用：将指定的字符写到标准输出设备。

表头文件：#include <stdio.h>

定义函数：int putchar(int c);

函数说明：putchar()用来将参数c字符写到标准输出设备。

返回值：putchar()会返回输出成功的字符，即参数c。若返回EOF，则代表输出失败。

附加说明：putchar()非真正函数，而是putc(c, stdout)宏定义。

 

(17) feof

作用：检查文件流是否读到了文件尾。

表头文件：#include <stdio.h>

定义函数：int feof(FILE * stream);

函数说明：feof()用来侦测是否读取到了文件尾，尾数stream为fopen()所返回之文件指针。如果已到文件尾，则返回非零值，其他情况返回0。

返回值：返回非零值代表已到达文件尾。

 

(18) clearer

作用：清除文件流的错误旗标。

表头文件：#include <stdio.h>

定义函数：void clearerr(FILE *stream);

函数说明：clearerr()清除参数stream指定的文件流所使用的错误旗标。

返回值：无。
